(set-logic HORN)
(set-info :source |
    Benchmark: Horn constraint system (5 clauses, 4 relation symbols)
    Generated by Eldarica (http://lara.epfl.ch/w/eldarica)
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-fun predr6_1 (Int Int Int Int) Bool)
(declare-fun predr2_2 (Int Int Int Int) Bool)
(declare-fun predr6_3 (Int Int Int Int) Bool)
(declare-fun predr4_4 (Int Int Int Int) Bool)
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (not (and (and (<= 0 var1 ) (predr6_1 var2 var1 0 var0 ) ) (not (forall ((var3 Int)) (not (= 0 (+ (* 2 var3 ) (* (- 1) var1 ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (not (and (<= 0 (+ var0 (* (- 1) 1 ) ) ) (and (and (predr4_4 var3 var2 var1 var0 ) (predr2_2 var6 (+ var0 (* (- 1) 1 ) ) var5 var4 ) ) (not (predr6_1 var3 var2 var5 var0 ) ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (not (and (<= 0 (+ var0 (* (- 2) 1 ) ) ) (and (and (predr4_4 var3 var2 var1 var0 ) (predr6_3 var6 (+ var0 (* (- 2) 1 ) ) var5 var4 ) ) (not (predr2_2 var7 (+ var0 (* (- 1) 1 ) ) var5 (+ var0 (* (- 1) 1 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (not (and (predr4_4 var2 var1 var0 0 ) (not (predr6_3 var2 var1 1 0 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (not (and (and (<= 0 var0 ) (not (predr4_4 var1 var0 var1 var0 ) ) ) (not (forall ((var2 Int)) (not (= 0 (+ (* 2 var2 ) (* (- 1) var0 ) ) ) ) ) ) ) ) ) ) )
(check-sat)
