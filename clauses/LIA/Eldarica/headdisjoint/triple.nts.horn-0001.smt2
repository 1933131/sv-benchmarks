(set-logic HORN)
(set-info :source |
    Benchmark: Horn constraint system (5 clauses, 4 relation symbols)
    Generated by Eldarica (http://lara.epfl.ch/w/eldarica)
    Output by Princess (http://www.philipp.ruemmer.org/princess.shtml)
|)
(set-info :status sat)
(declare-fun predr5_1 (Int Int Int Int) Bool)
(declare-fun predr2_2 (Int Int Int Int Int Int) Bool)
(declare-fun predr5_3 (Int Int Int Int) Bool)
(declare-fun predr0_4 (Int Int Int Int Int Int) Bool)
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (not (and (and (not (= 0 (+ (* 3 var2 ) (* (- 1) var1 ) ) ) ) (<= 0 var2 ) ) (predr5_1 var3 var2 var1 var0 ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (not (and (and (predr2_2 var5 var4 var3 var2 var1 var0 ) (not (predr5_1 var5 var3 (* 2 var1 ) var0 ) ) ) (not (forall ((var6 Int)) (not (= 0 (+ (* 2 var6 ) (* (- 1) var0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (forall ((var5 Int)) (forall ((var6 Int)) (forall ((var7 Int)) (forall ((var8 Int)) (forall ((var9 Int)) (not (and (and (<= 0 (+ (* (- 2) var8 ) var0 ) ) (<= 0 (+ (+ (* 2 var8 ) (* (- 1) var0 ) ) 1 ) ) ) (and (and (predr0_4 var5 var4 var3 var2 var1 var0 ) (predr5_3 var9 var8 var7 var6 ) ) (not (predr2_2 var5 var4 var3 var2 var7 var0 ) ) ) ) ) ) ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (forall ((var4 Int)) (not (and (predr0_4 var4 var3 var2 var1 var0 0 ) (not (predr5_3 var4 var2 0 0 ) ) ) ) ) ) ) ) ) )
(assert (forall ((var0 Int)) (forall ((var1 Int)) (forall ((var2 Int)) (forall ((var3 Int)) (not (and (<= 0 var0 ) (not (predr0_4 var2 var3 var0 var2 var1 var0 ) ) ) ) ) ) ) ) )
(check-sat)
