(set-logic HORN)
(declare-fun k_55 (Int Int Int Int (Array Int Int)) Bool)
(declare-fun k_53 (Int Int Int Int (Array Int Int)) Bool)
(declare-fun k_58 (Int Int Int Int (Array Int Int)) Bool)
(declare-fun k_62 (Int Int Int Int (Array Int Int)) Bool)
(declare-fun k_40 (Int Int Int Int Int Int (Array Int Int)) Bool)
(declare-fun k_45 (Int Int Int Int (Array Int Int)) Bool)
(declare-fun k_60 (Int Int Int Int (Array Int Int)) Bool)
(declare-fun k_51 (Int Int Int Int (Array Int Int)) Bool)
(declare-fun k_48 (Int Int Int Int Int (Array Int Int)) Bool)
(declare-fun k_37 (Int Int Int Int Int (Array Int Int)) Bool)
(assert (forall ((lq_tmp_x8 Int)
         (GT_6W Int)
         (LT_6S Int)
         (VV_F1 Int)
         (EQ_6U Int)
         (cmp (Array Int Int)))
  (=> (and (k_62 EQ_6U GT_6W LT_6S lq_tmp_x8 cmp)
           (= (select cmp EQ_6U) EQ_6U)
           (= (select cmp GT_6W) GT_6W)
           (= (select cmp LT_6S) LT_6S)
           true)
      (k_58 EQ_6U GT_6W LT_6S VV_F1 cmp))))
(assert (forall ((GT_6W Int)
         (LT_6S Int)
         (lq_tmp_x6 Int)
         (VV_F2 Int)
         (EQ_6U Int)
         (cmp (Array Int Int)))
  (=> (and (k_58 EQ_6U GT_6W LT_6S lq_tmp_x6 cmp)
           (= (select cmp EQ_6U) EQ_6U)
           (= (select cmp GT_6W) GT_6W)
           (= (select cmp LT_6S) LT_6S)
           (> VV_F2 lq_tmp_x6)
           true)
      (k_60 EQ_6U GT_6W LT_6S VV_F2 cmp))))
(assert (forall ((lq_tmp_x8 Int)
         (GT_6W Int)
         (LT_6S Int)
         (VV_F3 Int)
         (EQ_6U Int)
         (cmp (Array Int Int)))
  (=> (and (k_55 EQ_6U GT_6W LT_6S lq_tmp_x8 cmp)
           (= (select cmp EQ_6U) EQ_6U)
           (= (select cmp GT_6W) GT_6W)
           (= (select cmp LT_6S) LT_6S)
           true)
      (k_51 EQ_6U GT_6W LT_6S VV_F3 cmp))))
(assert (forall ((GT_6W Int)
         (LT_6S Int)
         (lq_tmp_x6 Int)
         (VV_F4 Int)
         (EQ_6U Int)
         (cmp (Array Int Int)))
  (=> (and (k_51 EQ_6U GT_6W LT_6S lq_tmp_x6 cmp)
           (= (select cmp EQ_6U) EQ_6U)
           (= (select cmp GT_6W) GT_6W)
           (= (select cmp LT_6S) LT_6S)
           true)
      (k_53 EQ_6U GT_6W LT_6S VV_F4 cmp))))
(assert (forall ((GT_6W Int) (LT_6S Int) (VV_F5 Int) (EQ_6U Int) (cmp (Array Int Int)))
  (=> (and (= (select cmp EQ_6U) EQ_6U)
           (= (select cmp GT_6W) GT_6W)
           (= (select cmp LT_6S) LT_6S)
           true)
      (k_45 EQ_6U GT_6W LT_6S VV_F5 cmp))))
(assert (forall ((VV_F6 Int)
         (GT_6W Int)
         (z Int)
         (LT_6S Int)
         (EQ_6U Int)
         (cmp (Array Int Int)))
  (=> (and (not (> VV_F6 z))
           (= (select cmp EQ_6U) EQ_6U)
           (= (select cmp GT_6W) GT_6W)
           (= (select cmp LT_6S) LT_6S)
           (k_48 EQ_6U GT_6W LT_6S VV_F6 z cmp)
           true)
      false)))
(assert (forall ((VV_F7 Int)
         (EQ_6U Int)
         (GT_6W Int)
         (LT_6S Int)
         (lq_anf__ddX Int)
         (x_adw Int)
         (cmp (Array Int Int)))
  (=> (and (k_45 EQ_6U GT_6W LT_6S x_adw cmp)
           (= (select cmp EQ_6U) EQ_6U)
           (= (select cmp GT_6W) GT_6W)
           (= (select cmp LT_6S) LT_6S)
           (> lq_anf__ddX x_adw)
           (> VV_F7 lq_anf__ddX)
           true)
      (k_48 EQ_6U GT_6W LT_6S VV_F7 x_adw cmp))))
(assert (forall ((VV_F8 Int)
         (a_adG Int)
         (GT_6W Int)
         (LT_6S Int)
         (EQ_6U Int)
         (lq_anf__ddW Int)
         (lq_anf__ddV Int)
         (x_adx Int)
         (cmp (Array Int Int)))
  (=> (and (k_37 EQ_6U GT_6W LT_6S x_adx a_adG cmp)
           (= (select cmp EQ_6U) EQ_6U)
           (= (select cmp GT_6W) GT_6W)
           (= (select cmp LT_6S) LT_6S)
           (= lq_anf__ddV 1)
           (= lq_anf__ddW lq_anf__ddV)
           (= VV_F8 (+ x_adx lq_anf__ddW))
           true)
      (k_40 EQ_6U GT_6W LT_6S VV_F8 a_adG x_adx cmp))))

(check-sat)
