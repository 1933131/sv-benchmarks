(set-logic HORN)
(declare-fun k_33 (Int Int Int Int (Array Int Int) (Array Int Int)) Bool)
(declare-fun k_46 (Int Int Int Int Int (Array Int Int) (Array Int Int)) Bool)
(declare-fun k_36
             (Int Int Int Int Int Int (Array Int Int) (Array Int Int))
             Bool)
(declare-fun k_28 (Int Int Int Int Int (Array Int Int) (Array Int Int)) Bool)
(declare-fun k_48 (Int Int Int Int Int (Array Int Int) (Array Int Int)) Bool)
(declare-fun k_38
             (Int Int Int Int Int Int (Array Int Int) (Array Int Int))
             Bool)
(declare-fun k_41 (Int Int Int Int Int (Array Int Int) (Array Int Int)) Bool)
(declare-fun k_44 (Int Int Int Int Int (Array Int Int) (Array Int Int)) Bool)
(assert (forall ((VV_F1 Int)
         (GT_6W Int)
         (LT_6S Int)
         (zs_abg Int)
         (EQ_6U Int)
         (len (Array Int Int))
         (cmp (Array Int Int)))
  (=> (and (k_33 EQ_6U GT_6W LT_6S zs_abg len cmp)
           (= (select cmp EQ_6U) EQ_6U)
           (= (select cmp GT_6W) GT_6W)
           (= (select cmp LT_6S) LT_6S)
           (>= (select len zs_abg) 0)
           (= (select len VV_F1) (select len zs_abg))
           true)
      (k_41 EQ_6U GT_6W LT_6S VV_F1 zs_abg len cmp))))
(assert (forall ((zs_abg Int)
         (VV_50 Int)
         (EQ_6U Int)
         (GT_6W Int)
         (VV_F2 Int)
         (LT_6S Int)
         (len (Array Int Int))
         (cmp (Array Int Int)))
  (=> (and (k_33 EQ_6U GT_6W LT_6S zs_abg len cmp)
           (= (select cmp EQ_6U) EQ_6U)
           (= (select cmp GT_6W) GT_6W)
           (= (select cmp LT_6S) LT_6S)
           (= (select len VV_50) (select len zs_abg))
           (>= (select len VV_50) 0)
           (>= (select len zs_abg) 0)
           (k_48 EQ_6U GT_6W LT_6S VV_F2 zs_abg len cmp)
           true)
      (k_36 EQ_6U GT_6W LT_6S VV_F2 VV_50 zs_abg len cmp))))
(assert (forall ((VV_F3 Int)
         (zs_abg Int)
         (EQ_6U Int)
         (GT_6W Int)
         (lq_tmp_x39 Int)
         (LT_6S Int)
         (len (Array Int Int))
         (cmp (Array Int Int)))
  (=> (and (k_33 EQ_6U GT_6W LT_6S zs_abg len cmp)
           (= (select cmp EQ_6U) EQ_6U)
           (= (select cmp GT_6W) GT_6W)
           (= (select cmp LT_6S) LT_6S)
           (>= (select len zs_abg) 0)
           true)
      (k_38 EQ_6U GT_6W LT_6S VV_F3 lq_tmp_x39 zs_abg len cmp))))
(assert (forall ((GT_6W Int)
         (zs_abg Int)
         (LT_6S Int)
         (VV_F4 Int)
         (EQ_6U Int)
         (len (Array Int Int))
         (cmp (Array Int Int)))
  (let ((a!1 (and (not (= (select len VV_F4) (select len zs_abg)))
                  (k_33 EQ_6U GT_6W LT_6S zs_abg len cmp)
                  (= (select cmp EQ_6U) EQ_6U)
                  (= (select cmp GT_6W) GT_6W)
                  (= (select cmp LT_6S) LT_6S)
                  (>= (select len zs_abg) 0)
                  (k_33 EQ_6U GT_6W LT_6S VV_F4 len cmp)
                  (>= (select len VV_F4) 0)
                  (= VV_F4 zs_abg)
                  true)))
    (=> a!1 false))))
(assert (forall ((VV_F5 Int)
         (zs_abg Int)
         (EQ_6U Int)
         (GT_6W Int)
         (VV_57 Int)
         (LT_6S Int)
         (len (Array Int Int))
         (cmp (Array Int Int)))
  (=> (and (k_33 EQ_6U GT_6W LT_6S VV_57 len cmp)
           (k_33 EQ_6U GT_6W LT_6S zs_abg len cmp)
           (= (select cmp EQ_6U) EQ_6U)
           (= (select cmp GT_6W) GT_6W)
           (= (select cmp LT_6S) LT_6S)
           (>= (select len VV_57) 0)
           (= VV_57 zs_abg)
           (>= (select len VV_57) 0)
           (>= (select len zs_abg) 0)
           (k_28 EQ_6U GT_6W LT_6S VV_F5 VV_57 len cmp)
           true)
      (k_46 EQ_6U GT_6W LT_6S VV_F5 zs_abg len cmp))))
(assert (forall ((VV_63 Int)
         (LT_6S Int)
         (EQ_6U Int)
         (GT_6W Int)
         (VV_F6 Int)
         (zs_abg Int)
         (len (Array Int Int))
         (cmp (Array Int Int)))
  (=> (and (k_33 EQ_6U GT_6W LT_6S VV_63 len cmp)
           (k_33 EQ_6U GT_6W LT_6S zs_abg len cmp)
           (= (select cmp EQ_6U) EQ_6U)
           (= (select cmp GT_6W) GT_6W)
           (= (select cmp LT_6S) LT_6S)
           (>= (select len VV_63) 0)
           (= VV_63 zs_abg)
           (>= (select len VV_63) 0)
           (>= (select len zs_abg) 0)
           (k_28 EQ_6U GT_6W LT_6S VV_F6 VV_63 len cmp)
           true)
      (k_44 EQ_6U GT_6W LT_6S VV_F6 zs_abg len cmp))))
(assert (forall ((zs_abg Int)
         (EQ_6U Int)
         (dummy..home.rjhala.research.liquidhaskell.include.ghc.list.lhs.716.24 Int)
         (GT_6W Int)
         (dummy..home.rjhala.research.liquidhaskell.include.ghc.list.lhs.716.29 Int)
         (VV_F7 Int)
         (LT_6S Int)
         (len (Array Int Int))
         (cmp (Array Int Int)))
  (=> (and (k_44 EQ_6U
                 GT_6W
                 LT_6S
                 dummy..home.rjhala.research.liquidhaskell.include.ghc.list.lhs.716.24
                 zs_abg
                 len
                 cmp)
           (k_46 EQ_6U
                 GT_6W
                 LT_6S
                 dummy..home.rjhala.research.liquidhaskell.include.ghc.list.lhs.716.29
                 zs_abg
                 len
                 cmp)
           (k_33 EQ_6U GT_6W LT_6S zs_abg len cmp)
           (= (select cmp EQ_6U) EQ_6U)
           (= (select cmp GT_6W) GT_6W)
           (= (select cmp LT_6S) LT_6S)
           (>= (select len zs_abg) 0)
           (= VV_F7
              (+ dummy..home.rjhala.research.liquidhaskell.include.ghc.list.lhs.716.24
                 dummy..home.rjhala.research.liquidhaskell.include.ghc.list.lhs.716.29))
           true)
      (k_48 EQ_6U GT_6W LT_6S VV_F7 zs_abg len cmp))))

(check-sat)
