(set-logic HORN)
(declare-fun k_29 (Int Int Int Int (Array Int Int)) Bool)
(declare-fun k_21 (Int Int Int Int (Array Int Int)) Bool)
(declare-fun k_27 (Int Int Int Int Int (Array Int Int)) Bool)
(declare-fun k_24 (Int Int Int Int Int (Array Int Int)) Bool)
(assert (forall ((GT_6W Int)
         (LT_6S Int)
         (VV_F1 Int)
         (lq_anf__dvT Int)
         (EQ_6U Int)
         (cmp (Array Int Int)))
  (=> (and (= (select cmp EQ_6U) EQ_6U)
           (= (select cmp GT_6W) GT_6W)
           (= (select cmp LT_6S) LT_6S)
           (= lq_anf__dvT 10)
           true)
      (k_29 EQ_6U GT_6W LT_6S VV_F1 cmp))))
(assert (forall ((lq_anf__dvT Int)
         (VV_F2 Int)
         (GT_6W Int)
         (LT_6S Int)
         (EQ_6U Int)
         (VV_32 Int)
         (cmp (Array Int Int)))
  (=> (and (= (select cmp EQ_6U) EQ_6U)
           (= (select cmp GT_6W) GT_6W)
           (= (select cmp LT_6S) LT_6S)
           (= lq_anf__dvT 10)
           (k_24 EQ_6U GT_6W LT_6S VV_F2 lq_anf__dvT cmp)
           true)
      (k_27 EQ_6U GT_6W LT_6S VV_F2 VV_32 cmp))))
(assert (forall ((GT_6W Int)
         (LT_6S Int)
         (lq_anf__dvT Int)
         (VV_F3 Int)
         (EQ_6U Int)
         (cmp (Array Int Int)))
  (=> (and (= (select cmp EQ_6U) EQ_6U)
           (= (select cmp GT_6W) GT_6W)
           (= (select cmp LT_6S) LT_6S)
           (= lq_anf__dvT 10)
           (= VV_F3 10)
           (= VV_F3 lq_anf__dvT)
           true)
      (k_21 EQ_6U GT_6W LT_6S VV_F3 cmp))))
(assert (forall ((VV_F4 Int)
         (GT_6W Int)
         (LT_6S Int)
         (z_avL Int)
         (EQ_6U Int)
         (cmp (Array Int Int)))
  (=> (and (k_21 EQ_6U GT_6W LT_6S z_avL cmp)
           (= (select cmp EQ_6U) EQ_6U)
           (= (select cmp GT_6W) GT_6W)
           (= (select cmp LT_6S) LT_6S)
           (k_21 EQ_6U GT_6W LT_6S VV_F4 cmp)
           (= VV_F4 z_avL)
           true)
      (k_24 EQ_6U GT_6W LT_6S VV_F4 z_avL cmp))))

(check-sat)
