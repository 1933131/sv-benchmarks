This directory contains verification tasks for checking memory safety.

A verifications task consists of a C program and a property.


__PROPERTY__

The property is: p_valid-dealloc and p_valid-deref and p_no-memleak, where
p_valid-dealloc    = "all memory deallocations are valid (counterexample: invalid free)",
p_valid-deref      = "all pointer dereferences are valid (counterexample: invalid dereference)", and
p_valid-no-memleak = "all allocated memory is pointed to or deallocated (counterexample: memory leak)".

The verification task is to check if the following statement is correct:
  "The program satisfies p1 and p2 and p3."


__PROGRAM__

The C programs are defined in the category set 'MemorySafety.set'.

Agreement: All programs in this category violate at most one property p 
(p in {p_valid-dealloc, p_valid-deref, p_valid-no-memleak}).


__RESULT__

The verification result is either:
- "TRUE", or
- "NOT(p)", or
- "UNKNOWN"
with p in {p_valid-dealloc, p_valid-deref, p_valid-no-memleak}.

The answer "TRUE" means that the property (the conjunction of all partial properties) is satisfied.
The answer "NOT(p)" means that the partial property p (p in {p_valid-dealloc, p_valid-deref, p_valid-no-memleak}) 
  is violated and a counterexample is produced.
The answer "UNKNOWN" means that the tool cannot decide the problem or is implicitly
  given by a tool crash, time-out, or out-of-memory.


